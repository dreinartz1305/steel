{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "#11 - Emissions",
  "steps": [
    {
      "file": "mppsteel/model/emissions.py",
      "description": "# Emissions\n\nThis is the file used to generate the switching tables for TCO and emissions abatment.",
      "line": 1
    },
    {
      "file": "mppsteel/model/emissions.py",
      "description": "## Calculate emissions\n\nThis is the main function to calculate the complete array of technology switch and emissions to match the years. The function takes three arguments:\n+ `year_end` the year when the table should stop calculating. By default is set to 2050\n+ `output_type` Determines whether to return the full DataFrame or a summary.\n+ `serialize_only` A boolean argument to detrmine if the DataFrame is serialized to a pickle file or returned",
      "line": 98,
      "selection": {
        "start": {
          "line": 86,
          "character": 1
        },
        "end": {
          "line": 98,
          "character": 8
        }
      }
    },
    {
      "file": "mppsteel/model/emissions.py",
      "description": "### Load data\n\nLoad the emissions data from the pickle intermediate folder, and create a range to iterate over with the start year to the end year plus one (to include the end year).",
      "line": 116,
      "selection": {
        "start": {
          "line": 113,
          "character": 5
        },
        "end": {
          "line": 116,
          "character": 55
        }
      }
    },
    {
      "file": "mppsteel/model/emissions.py",
      "description": "### Iterations\n\nIterate over the years in the range, the base technology and the switch technology. If the technology is set to close plant, then skip it. Else, compare the emissions using the previously loaded emissions data.",
      "line": 123,
      "selection": {
        "start": {
          "line": 117,
          "character": 5
        },
        "end": {
          "line": 123,
          "character": 22
        }
      }
    },
    {
      "file": "mppsteel/model/emissions.py",
      "description": "### Compare the emissions.\n\nCalculate the emissions diffrence with the data about emissions, plant, year, and technology switch, using the following function:\n```python\ndef compare_emissions(df: pd.DataFrame, base_tech: str, comp_tech: str, emission_type: str, start_year: int = MODEL_YEAR_START, date_span: int = 20):\n    base_tech_dict = get_emissions_by_year(df, base_tech, start_year, date_span)\n    comp_tech_dict = get_emissions_by_year(df, comp_tech, start_year, date_span)\n    years = list(base_tech_dict.keys())\n    df = pd.DataFrame(\n             data={\n             \"start_year\": start_year,\n             \"year\": years,\n             \"start_technology\": base_tech,\n             \"end_technology\": comp_tech,\n             \"start_tech_values\": base_tech_dict.values(),\n             \"comp_tech_values\": comp_tech_dict.values(),\n             }\n         )\n    df[f\"abated_{emission_type}_emissions\"] = (df[\"start_tech_values\"] - df[\"comp_tech_values\"])\n    return df\n```",
      "line": 141,
      "selection": {
        "start": {
          "line": 134,
          "character": 25
        },
        "end": {
          "line": 141,
          "character": 26
        }
      }
    },
    {
      "file": "mppsteel/model/emissions.py",
      "description": "### Full dataframe and summary\n\nCreate the full dataframe by concatenating all the dataframes. Create the summary by grouping the dataframe by start_year, start_technology, and end_technology.",
      "line": 160,
      "selection": {
        "start": {
          "line": 147,
          "character": 4
        },
        "end": {
          "line": 160,
          "character": 6
        }
      }
    },
    {
      "file": "mppsteel/model/emissions.py",
      "description": "### Returns \n\nDepending on how the arguments were set, the functions can serialize the full dataframe and summary into a pickle file, return the summary, or return the full dataframe.",
      "line": 169,
      "selection": {
        "start": {
          "line": 162,
          "character": 5
        },
        "end": {
          "line": 169,
          "character": 19
        }
      }
    }
  ]
}