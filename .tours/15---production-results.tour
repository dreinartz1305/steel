{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "#15 - Production results",
  "steps": [
    {
      "file": "mppsteel/results/production.py",
      "description": "# Production results\n\nThis module contains the functions used to get the results out of the model based on the technology switches.",
      "line": 1
    },
    {
      "file": "mppsteel/results/production.py",
      "description": "### Production results flow\n\nMain function to create the production results.",
      "line": 273,
      "selection": {
        "start": {
          "line": 265,
          "character": 1
        },
        "end": {
          "line": 273,
          "character": 12
        }
      }
    },
    {
      "file": "mppsteel/results/production.py",
      "description": "### Demand and capacity\n\nGet the steel demand and the technolgy capacity for the max solver year.\n\nThe capacity is generated by the following function:\n```python\ndef format_variable_costs(variable_cost_df: pd.DataFrame):\n    df_c = variable_cost_df.copy()\n    df_c.drop(labels=['value'], axis=1, inplace=True)\n    df_c = df_c.melt(id_vars=['plant_iteration', 'technology', 'year', 'material_category', 'unit'],var_name=['cost_type'], value_name='cost')\n    df_c['cost'] = df_c['cost'].replace('', 0)\n    return df_c.groupby(by=['plant_iteration', 'year', 'technology']).sum().sort_values(by=['plant_iteration', 'year', 'technology'])\n```",
      "line": 276,
      "selection": {
        "start": {
          "line": 275,
          "character": 4
        },
        "end": {
          "line": 276,
          "character": 63
        }
      }
    },
    {
      "file": "mppsteel/results/production.py",
      "description": "### Production results\n\nGenerate the production results, emissions and global metaresults by calling the following functions:\n\n  1. `production_stats_generator`\n  2. `generate_production_emission_stats`\n  3. `global_metaresults_calculator`\n\n  Each function returns a dataframe containing the apropiate results.",
      "line": 282,
      "selection": {
        "start": {
          "line": 277,
          "character": 5
        },
        "end": {
          "line": 282,
          "character": 85
        }
      }
    },
    {
      "file": "mppsteel/results/production.py",
      "description": "### Results dictionary\n\nThe `results_dict` is a dictionary where the keys are the names of the results and the values are the dataframes with the results. \n\nIf the `serialize_only` argument was set to `True` each dataframe is saved as a pickle in the `PKL_DATA_FINAL`, else, the dictionary is returned.",
      "line": 295,
      "selection": {
        "start": {
          "line": 284,
          "character": 5
        },
        "end": {
          "line": 295,
          "character": 24
        }
      }
    }
  ]
}