{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "#00 - Full model run",
  "steps": [
    {
      "file": "main.py",
      "description": "# Main file\n\nTHe main interface with the model can be accessed with this file, a command line tool to run the full model, in the terminal run:\n```bash\npython main.py -a\n```",
      "line": 1,
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 1,
          "character": 36
        }
      }
    },
    {
      "file": "main.py",
      "description": "## Command Line Interface\n\nThe command line interface for the MPP Python Steel Model takes different arguments to run the model.",
      "line": 111,
      "selection": {
        "start": {
          "line": 95,
          "character": 1
        },
        "end": {
          "line": 111,
          "character": 80
        }
      }
    },
    {
      "file": "main.py",
      "description": "## Full flow\n\nIf the argument in the CLI is -a, the script will generate a full run of the model.",
      "line": 118,
      "selection": {
        "start": {
          "line": 117,
          "character": 5
        },
        "end": {
          "line": 118,
          "character": 20
        }
      }
    },
    {
      "file": "main.py",
      "description": "## Full flow\n\nThe full flow of the model calls two main steps:\n1. data import and preprocessing refresh\n2. half model run",
      "line": 87
    },
    {
      "file": "main.py",
      "description": "## Data import and preprocessing refresh\n\nThe data import and prepocessing calls the two process for importing the data and preprocessing it. Each of these steps have multiple stages.",
      "line": 77,
      "selection": {
        "start": {
          "line": 75,
          "character": 1
        },
        "end": {
          "line": 77,
          "character": 31
        }
      }
    },
    {
      "file": "main.py",
      "description": "## Data import\n\nThe data import stage consists of the following steps (click in each one to go to the specific tour)\n    \n  1. [Load data][load_data]\n  2. [Generate hydrogen timeseries][hydrogen_minimodel]\n  3. [Generate timeseries][timeseries]\n  4. [Standarise business cases][Standarise business case]\n  5. [Create country reference][Country reference]",
      "line": 42,
      "selection": {
        "start": {
          "line": 36,
          "character": 1
        },
        "end": {
          "line": 42,
          "character": 44
        }
      }
    },
    {
      "file": "main.py",
      "description": "## Data preprocessing\n\nThe data preprocessing phase consists of the following steps:\n\n  1. [Steel plant processor][Steel plant formatter]\n  2. [Create capex and opex dictionary][CAPEX OPEX dict]\n  3. [Generate preprocessed emissions data][Preprocessed emissions data]\n  4. [Create capex timeseries][CAPEX switching]\n  5. [Calculate emissions][Emissions]\n  6. [Investment cycle flow][Investment Cycle]\n  7. [Generate variable plant summary][Variable plant cost]",
      "line": 53,
      "selection": {
        "start": {
          "line": 44,
          "character": 1
        },
        "end": {
          "line": 53,
          "character": 57
        }
      }
    },
    {
      "file": "main.py",
      "description": "## Half model run\n\nThe half model run function calls the following steps:\n+ `model_calculation_phase()`\n+ `model_results_phase()`\n+ `model_outputs_phase()`",
      "line": 79
    },
    {
      "file": "main.py",
      "description": "## Model outputs\n\nThe final phase of the model is to save the results to CSV files, to do so the `pickle_to_csv` function is called, this function does the following:\n```python\ndef pickle_to_csv(pickle_filename: str, csv_filename: str = ''):\n    df = read_pickle_folder(PKL_DATA_FINAL, pickle_filename)\n    logger.info(f'||| Saving {pickle_filename} pickle file as {csv_filename or pickle_filename}.csv')\n    if csv_filename:\n        \n        df.to_csv(f\"{OUTPUT_FOLDER}/{csv_filename}.csv\")\n    else:\n        df.to_csv(f\"{OUTPUT_FOLDER}/{pickle_filename}.csv\")\n```\n\nThis is the final step for the model's full run.",
      "line": 66,
      "selection": {
        "start": {
          "line": 62,
          "character": 1
        },
        "end": {
          "line": 66,
          "character": 43
        }
      }
    },
    {
      "file": "main.py",
      "description": "## Model calculation phase\n\nAt this moment the [solver_flow function is called][Solver]",
      "line": 56,
      "selection": {
        "start": {
          "line": 55,
          "character": 1
        },
        "end": {
          "line": 56,
          "character": 62
        }
      }
    },
    {
      "file": "main.py",
      "description": "## Model results phase\n\nThere are two functions to get the results out of the model:\n\n  1. [production_results_flow][Production results]\n  2. [investment_results][Investment results]",
      "line": 60,
      "selection": {
        "start": {
          "line": 58,
          "character": 1
        },
        "end": {
          "line": 60,
          "character": 44
        }
      }
    }
  ],
  "isPrimary": true
}